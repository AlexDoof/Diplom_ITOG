#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Ответственный = Пользователи.ТекущийПользователь();

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЗаказПокупателя.Организация КАК Организация,
				   |	ЗаказПокупателя.Контрагент КАК Контрагент,
				   |	ЗаказПокупателя.Договор КАК Договор,
				   |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
				   |	ЗаказПокупателя.Товары.(
				   |		Ссылка КАК Ссылка,
				   |		НомерСтроки КАК НомерСтроки,
				   |		Номенклатура КАК Номенклатура,
				   |		Количество КАК Количество,
				   |		Цена КАК Цена,
				   |		Сумма КАК Сумма
				   |	) КАК Товары,
				   |	ЗаказПокупателя.Услуги.(
				   |		Ссылка КАК Ссылка,
				   |		НомерСтроки КАК НомерСтроки,
				   |		Номенклатура КАК Номенклатура,
				   |		Количество КАК Количество,
				   |		Цена КАК Цена,
				   |		Сумма КАК Сумма
				   |	) КАК Услуги
				   |ИЗ
				   |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
				   |ГДЕ
				   |	ЗаказПокупателя.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);

	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;

	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;

	Основание = ДанныеЗаполнения;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;

	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры 
	
//+++ДП_Нетология	
// Возвращаемое значение - Структура с константами, если они обе заполнены, иначе возвращает Неопределено 
// Очищает таблицу "Услуги"
Функция ПроверитьКонстанты_Номенклатура() Экспорт
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();

	Если НоменклатураАбонентскаяПлата.Пустая() Или НоменклатураРаботыСпециалиста.Пустая() Тогда
		ВызватьИсключение НСтр(
			"ru = 'Не заполнена константа /НоменклатураАбонентскаяПлата/ или /НоменклатураРаботыСпециалиста/'");
			Возврат Неопределено;
	Иначе 
		КонстантыСтруктура = Новый Структура("НоменклатураАбонентскаяПлата,НоменклатураРаботыСпециалиста",НоменклатураАбонентскаяПлата,НоменклатураРаботыСпециалиста);
		Услуги.Очистить();
		Возврат КонстантыСтруктура;	
	КонецЕсли;
	
КонецФункции

Процедура ВКМ_ЗаполнитьНаСервере(Объект) Экспорт
	//Доработка 17-11-2024
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор,
							"ВидДоговора, ВКМ_АбонентскаяПлата, ВКМ_НачалоДействияДоговора, ВКМ_КонецДействияДоговора");
	
	ВидДоговораОбъекта = РеквизитыДоговора.ВидДоговора;
	АбонентскаяПлатаДоговораОбъекта = РеквизитыДоговора.ВКМ_АбонентскаяПлата;
	ДатаНачалаДействияДоговора = РеквизитыДоговора.ВКМ_НачалоДействияДоговора;
	ДатаОкончанияДействияДоговора = РеквизитыДоговора.ВКМ_КонецДействияДоговора;
		
	Если ВидДоговораОбъекта = Перечисления.ВидыДоговоровКонтрагентов.АбонентскоеОбслуживание Тогда
		Если Дата < ДатаНачалаДействияДоговора Или Дата > ДатаОкончанияДействияДоговора Тогда
			ОбщегоНазначения.СообщитьПользователю("Дата документа выходит за рамки дат действия договора");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
		КонстантыСтруктура = ?(ПроверитьКонстанты_Номенклатура() <> Неопределено, ПроверитьКонстанты_Номенклатура(),Неопределено);
		Если КонстантыСтруктура = Неопределено Тогда 
			Возврат 
		КонецЕсли;
		
	//Если в договоре ненулевая сумма абонентской платы...
	Если ЗначениеЗаполнено(АбонентскаяПлатаДоговораОбъекта) И АбонентскаяПлатаДоговораОбъекта <> 0 Тогда
		НоменклатураАбонентскаяПлата = КонстантыСтруктура.НоменклатураАбонентскаяПлата;
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрока.Сумма = АбонентскаяПлатаДоговораОбъекта;
		ОбщегоНазначения.СообщитьПользователю("Абонентская плата за " + Формат(Дата, "ДФ='MMMM yyyy ''г.'''")
			+ " составила " + АбонентскаяПлатаДоговораОбъекта + " см. таблицу //Услуги//");
	КонецЕсли;
		
		// Если в месяц даты документа в регистре ВыполненныеКлиентуРаботы есть информация о выполненных работах по этому договору, 
		// добавьте в табличную часть строку с номенклатурой из константы НоменклатураРаботыСпециалиста и 
		// общим количеством и суммой из регистра ВыполненныеКлиентуРаботы за месяц документа.

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Договор КАК Договор,
	|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.КоличествоЧасовОборот КАК КоличествоЧасовОборот,
	|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот,
	|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Клиент КАК Клиент
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.ОстаткиИОбороты(
	|			&НачалоМесяца,
	|			&КонецМесяца,
	|			Месяц,
	|			,
	|			Договор = &Договор
	|				И Клиент = &Клиент) КАК ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты";

	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если ЗначениеЗаполнено(Выборка.СуммаКОплатеОборот) И Выборка.СуммаКОплатеОборот <> 0 Тогда
		
		НоменклатураРаботыСпециалиста = КонстантыСтруктура.НоменклатураРаботыСпециалиста;
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрока.Сумма = Выборка.СуммаКОплатеОборот;
		ОбщегоНазначения.СообщитьПользователю("За текущий месяц по данному клиенту и договору выполнено работ на "
			+ Выборка.СуммаКОплатеОборот + " руб. 
										   | см. таблицу //УСЛУГИ// ");
	КонецЕсли;
	
КонецПроцедуры
//---ДП_Нетология
#КонецОбласти

#КонецЕсли