#Область СобытияДокумента 

Процедура ОбработкаПроведения(Отказ, Режим)
	// Документ делает движение и расчеты по: 
	// Окладу  	
	// Проценту за выполненные работы у специалистов (адм. персонал получает только оклад)  
	// Отпуску  
	
	//Движения и расчеты по окладу:
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина; 
	
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл  
		Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
			Движение.ПериодДействияНачало = ТекСтрокаНачисления.ПериодДействияНачало;
			Движение.ПериодДействияКонец = ТекСтрокаНачисления.ПериодДействияКонец;
			Движение.ПериодРегистрации = ТекСтрокаНачисления.ПериодДействияНачало;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.Показатель = ТекСтрокаНачисления.СуммаКОплате; // При расчете ОКЛАДА полеТаблицы СуммаКОплате - это Показатель оклада за МЕсяц у тек. сотрудника согласно рег.Сведений
			Движение.ГрафикРаботы = ТекСтрокаНачисления.График;
		КонецЕсли;
	КонецЦикла;  	
	
	Движения.Записать();
	РассчитатьОклады(Движения.ВКМ_ОсновныеНачисления, Ссылка); 
	
	// Движения и расчеты по ОсновныеНачисления.ПроцентОтВыполненныхРабот  
	// Так как ПроцентОтВыполненныхРабот не имеет базы и хранится в РегНакопления, то 
	// расчитывать будем прямо при формировании движений по рег расчета(Осн.начисления.%от работ). 
	// При заполнении формы документа если у текущего сотрудника есть начисления в рег накопления за указанный период - они попадают в ТЧ этого документа 
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл  
		Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтРабот Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
			Движение.ПериодДействияНачало = ТекСтрокаНачисления.ПериодДействияНачало;
			Движение.ПериодДействияКонец = ТекСтрокаНачисления.ПериодДействияКонец;
			Движение.ПериодРегистрации = ТекСтрокаНачисления.ПериодДействияНачало;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.Показатель = ТекСтрокаНачисления.Показатель;
			Движение.СуммаКОплате = ТекСтрокаНачисления.СуммаКОплате; 
		КонецЕсли;
	КонецЦикла;  	
	Движения.Записать();
	
	//Движения и расчеты по Отпускам  
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина; 
	
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл  
		Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
			Движение.ПериодДействияНачало = НачалоДня(ТекСтрокаНачисления.ПериодДействияНачало);
			Движение.ПериодДействияКонец = КонецДня(ТекСтрокаНачисления.ПериодДействияКонец);
			Движение.БазовыйПериодначало = ДобавитьМесяц(НачалоМесяца(ТекСтрокаНачисления.ПериодДействияНачало), -12); 
			Движение.БазовыйПериодКонец = НачалоМесяца(ТекСтрокаНачисления.ПериодДействияКонец);
			Движение.ПериодРегистрации = ТекСтрокаНачисления.ПериодДействияНачало;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.Показатель = ТекСтрокаНачисления.Показатель;
			Движение.ГрафикРаботы = ТекСтрокаНачисления.График; 
			Движение.ДниОтпуска = (КонецДня(ТекСтрокаНачисления.ПериодДействияКонец) - НачалоДня(ТекСтрокаНачисления.ПериодДействияНачало)) / 86400;
		КонецЕсли;
	КонецЦикла;  
	
	Движения.ВКМ_Удержания.Записывать = Истина;
	// Движение по УДЕРЖАНИЯМ
	// 1. Клонирование ТЧ "Начисления" чтоб свернуть ее
	ТЧ_ДляУдержаний = Новый ТаблицаЗначений();
	ТЧ_ДляУдержаний.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ВКМ_Сотрудники"),"Сотрудник");
    ТЧ_ДляУдержаний.Колонки.Добавить("ПериодДействияНачало", Новый ОписаниеТипов("Дата"),"ПериодДействияНачало");
	ТЧ_ДляУдержаний.Колонки.Добавить("ПериодДействияКонец", Новый ОписаниеТипов("Дата"),"ПериодДействияКонец");
	КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
	ТЧ_ДляУдержаний.Колонки.Добавить("Показатель",Новый ОписаниеТипов("Число", КвалификаторыЧисла) ,"Показатель");
	
	Для Каждого ТекСтрока Из Начисления Цикл
		новСТрока = ТЧ_ДляУдержаний.Добавить();
		ЗаполнитьЗначенияСвойств(новСТрока,ТекСтрока);
	КонецЦикла;	   
	
	ТЧ_ДляУдержаний.Свернуть("Сотрудник,ПериодДействияНачало,ПериодДействияКонец","Показатель");  
	
	// 2. Движения по регистру расчета Удержания
	Для Каждого ТекСтрока Из ТЧ_ДляУдержаний Цикл 
		ДвижениеУд = Движения.ВКМ_Удержания.Добавить();
		ДвижениеУд.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеУд.ПериодРегистрации = Дата;
		ДвижениеУд.Сотрудник = ТекСтрока.Сотрудник;
		ДвижениеУд.БазовыйПериодНачало = ТекСтрока.ПериодДействияНачало;
		ДвижениеУд.БазовыйПериодКонец = ТекСтрока.ПериодДействияКонец;
	КонецЦикла;  
	
	Движения.Записать();  
	РассчитатьОтпуска();
	РассчитатьУдержания();
	ВзаиморасчетыССотрудниками();		
КонецПроцедуры 

#КонецОбласти  



#Область СлужебныеПроцедурыИФункции   


Процедура РассчитатьОклады(НаборЗаписей, Регистратор)  //готово
	
	ПроцентНДФЛ = Константы.ВКМ_ПроцентНДФЛ.Получить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Показатель КАК Показатель,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия,0) КАК Норма,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия,0) КАК Факт,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаКОплатеБаза,0) КАК СуммаКОплатеБаза
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&МассивИзмерений, &МассивИзмерений, , Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";  
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	МассивИзмерений = Новый Массив(1);
	МассивИзмерений[0] = "Сотрудник";
	Запрос.УстановитьПараметр("МассивИзмерений", МассивИзмерений);    
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерСтроки",);  
	
	Для каждого Запись из НаборЗаписей Цикл 
		
		СтруктураПоиска.НомерСтроки = Запись.НомерСтроки;	
		Выборка.НайтиСледующий(СтруктураПоиска);	
		Норма = Выборка.Норма;
		Факт = Выборка.Факт;    
		ВидРасчета = Выборка.ВидРасчета;  
		Показатель = Выборка.Показатель;
		Если ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда 
			Запись.ОтработаноДней = Факт;
			Запись.СуммаКОплате = Факт / Норма * Показатель  
		КонецЕсли;
		
	КонецЦикла; 
	НаборЗаписей.Записать(,,Ложь);
	
КонецПроцедуры 


Процедура РассчитатьОтпуска()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Показатель КАК Показатель,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия,0) КАК Норма,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия,0) КАК Факт,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаКОплатеБаза,0) КАК СуммаКОплатеБаза,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза,0) КАК ОтработаноДнейБаза
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&МассивИзмерений, &МассивИзмерений, , Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	МассивИзмерений = Новый Массив(1);
	МассивИзмерений[0] = "Сотрудник";
	Запрос.УстановитьПараметр("МассивИзмерений", МассивИзмерений);
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	НаборЗаписей = РегистрыРасчета.ВКМ_ОсновныеНачисления.СоздатьНаборЗаписей(); //Достаем записи движений без СуммыКОплате
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("НомерСтроки",);  
	
	Для каждого Запись из НаборЗаписей Цикл 
		
		СтруктураПоиска.НомерСтроки = Запись.НомерСтроки;	
		Выборка.НайтиСледующий(СтруктураПоиска);	
		Норма = Выборка.Норма;
		Факт = Выборка.Факт;    
		ВидРасчета = Выборка.ВидРасчета;  
		Показатель = Выборка.Показатель;
		БазаДнейОтработано = Выборка.ОтработаноДнейБаза ;  
		СуммаБаза = Выборка.СуммаКОплатеБаза;
		
		Если ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда   
			Запись.СуммаКОплате = СуммаБаза / БазаДнейОтработано * Факт;	
		КонецЕсли;
		
	КонецЦикла; 
	НаборЗаписей.Записать(,,Ложь);
	
КонецПроцедуры


Процедура РассчитатьУдержания() 
	ПроцентНДФЛ = Константы.ВКМ_ПроцентНДФЛ.Получить();
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ 
	|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
	|	ВКМ_Удержания.ВидРасчета КАК ВидРасчета,
	|	ВКМ_Удержания.Начисление КАК Начисление,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаКОплатеБаза, 0) КАК База
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&МассивИзмерений, &МассивИзмерений, &РегистраторРазрез, Регистратор = &Регистратор) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор";     
	
	НаборЗаписей = РегистрыРасчета.ВКМ_Удержания.СоздатьНаборЗаписей(); //Достаем записи движений без СуммыКОплате
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Прочитать(); 
	
	МассивИзмерений = Новый Массив(1);
	МассивИзмерений[0] = "Сотрудник";
	РегистраторРазрез = Новый Массив(1);
	РегистраторРазрез[0] = "Регистратор";
	Запрос.УстановитьПараметр("МассивИзмерений", МассивИзмерений);
	Запрос.УстановитьПараметр("РегистраторРазрез", РегистраторРазрез);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();  
	//Определение структуры для поиска по номеру строки
	Поиск = Новый Структура("НомерСтроки",0);   
	Для Каждого Запись Из НаборЗаписей Цикл    
		Поиск.НомерСтроки = Запись.НомерСтроки;
		// Поиск нужной строки выборки по номеру строки
		Если Выборка.НайтиСледующий(Поиск) Тогда
			//  Расчет НДФЛ от базы
			Запись.СуммаУдержания = Выборка.База * ПроцентНДФЛ / 100; 
			Запись.Начисление = Выборка.База;	 
		КонецЕсли; 
	КонецЦикла;     
	
	// Позицию выборки необходимо сбросить в начало
	Выборка.Сбросить();    
	
	// Запись набора
	НаборЗаписей.Записать();
	
	
КонецПроцедуры


Процедура ВзаиморасчетыССотрудниками()
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина; 
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Очистить();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
|	СУММА(ВКМ_ОсновныеНачисления.СуммаКОплате) КАК СуммаКОплате
|ПОМЕСТИТЬ ВТ_ОСН_НАЧИСЛЕНИЯ
|ИЗ
|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
|ГДЕ
|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
|
|СГРУППИРОВАТЬ ПО
|	ВКМ_ОсновныеНачисления.Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СУММА(ВКМ_Удержания.СуммаУдержания) КАК СуммаУдержания,
|	ВТ_ОСН_НАЧИСЛЕНИЯ.СуммаКОплате КАК СуммаКОплате,
|	ВТ_ОСН_НАЧИСЛЕНИЯ.Сотрудник КАК Сотрудник
|ИЗ
|	ВТ_ОСН_НАЧИСЛЕНИЯ КАК ВТ_ОСН_НАЧИСЛЕНИЯ
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
|		ПО (ВКМ_Удержания.Сотрудник = ВТ_ОСН_НАЧИСЛЕНИЯ.Сотрудник)
|ГДЕ
|	ВКМ_Удержания.Регистратор = &Ссылка
|
|СГРУППИРОВАТЬ ПО
|	ВКМ_Удержания.Сотрудник,
|	ВТ_ОСН_НАЧИСЛЕНИЯ.СуммаКОплате,
|	ВТ_ОСН_НАЧИСЛЕНИЯ.Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;   
		Движение.Период = Дата; 
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.СуммаКОплате - Выборка.СуммаУдержания;
	КонецЦикла; 
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
КонецПроцедуры
#КонецОбласти