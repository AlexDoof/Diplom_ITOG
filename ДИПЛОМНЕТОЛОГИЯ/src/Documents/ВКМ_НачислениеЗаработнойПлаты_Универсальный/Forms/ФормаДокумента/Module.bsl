#Область ОбработчикСобытийФормы  

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
КонецПроцедуры

#КонецОбласти   


#Область ОбработчикСобытийЭлементовФормы 
&НаКлиенте
Процедура НачисленияВидРасчетаПриИзменении(Элемент)
	УстановитьСуммуПоПроценту();
КонецПроцедуры  

&НаКлиенте
Процедура НачисленияСотрудникПриИзменении(Элемент)
	УстановитьСуммуПоПроценту();
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПериодДействияНачалоПриИзменении(Элемент)
	УстановитьСуммуПоПроценту();
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПериодДействияКонецПриИзменении(Элемент)
	УстановитьСуммуПоПроценту();
КонецПроцедуры

#КонецОбласти 


#Область СлужебныеПроцедурыИФункции 

&НаКлиенте
Процедура УстановитьСуммуПоПроценту() 
	ТекДанные = Элементы.Начисления.ТекущиеДанные;     
	ТекДанные.Показатель = 0;
	Результат = ВидРасчета_Показатель_СуммаНачислений(ТекДанные.Сотрудник, ТекДанные.ВидРасчета, ТекДанные.ПериодДействияНачало); //Возвращает структуру: Показатель и Видрасчета (строка) и Сумма начислений 
	Если Результат.ВидРасчета = "Оклад" Тогда
		ТекДанные.СуммаКОплате = Результат.Сумма;  
	ИначеЕсли 
		Результат.ВидРасчета = "ПроцентОтРабот" Тогда 
		ТекДанные.СуммаКОплате =  ВычислитьПроцентЗаВыполненныеРаботы_И_НДФЛ(ТекДанные.Сотрудник, ТекДанные.ПериодДействияНачало, ТекДанные.ПериодДействияКонец, ТекДанные.ВидРасчета);	
		ТекДанные.Показатель = Результат.Показатель;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВидРасчета_Показатель_СуммаНачислений(Сотрудник, ВидРасчета, ПериодДействияНачало)  
	Результат = Новый Структура("Сумма, ВидРасчета, Показатель");
	Если ЗначениеЗаполнено(Сотрудник) И ЗначениеЗаполнено(ВидРасчета) Тогда 
		СотрудникОбъект = Сотрудник.ПолучитьОбъект();
		Сумма = 0;  
		Отбор = Новый структура("Сотрудник", Сотрудник);
		Если ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда 
			Результат.ВидРасчета = "Оклад";
			Попытка
				Сумма = РегистрыСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(ПериодДействияНачало, Отбор)[0].Оклад;
			Исключение ОбщегоНазначения.СообщитьПользователю("У сотрудника "+ Сотрудник +" не установлен оклад на дату ""Период действия начало"" "); 
			КонецПопытки;
		ИначеЕсли ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтРабот И СотрудникОбъект.Категория = Перечисления.ВКМ_КатегорияСотрудника.Специалист Тогда 
			Результат.ВидРасчета = "ПроцентОтРабот";
			Попытка
				Результат.Показатель = РегистрыСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(ПериодДействияНачало, Отбор)[0].ПроцентЗаВыполненныеРаботы;   
			Исключение ОбщегоНазначения.СообщитьПользователю("У сотрудника "+ Сотрудник +" не установлен процент за выполеннные работы на дату ""периода действия начало"""); 
			КонецПопытки;
		КонецЕсли; 
	КонецЕсли;
	Результат.Сумма = Сумма;
	Возврат Результат; 
КонецФункции 

Функция ВычислитьПроцентЗаВыполненныеРаботы_И_НДФЛ(Сотрудник, ПериодНачало, ПериодКонец, ВидРасчета)
	Если ЗначениеЗаполнено(Сотрудник)
		И ЗначениеЗаполнено(ПериодНачало) 
		И ЗначениеЗаполнено(ПериодКонец) 
		И ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтРабот тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник КАК Сотрудник,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаНачислений
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
		|			&ПериодНачало,
		|			&ПериодКонец,
		|			,
		|			Сотрудник = &Сотрудник
		|				И Сотрудник.Категория = &Категория) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты";
		Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
		Запрос.УстановитьПараметр("ПериодНачало",ПериодНачало);
		Запрос.УстановитьПараметр("ПериодКонец",ПериодКонец); 
		Запрос.УстановитьПараметр("Категория",Перечисления.ВКМ_КатегорияСотрудника.Специалист);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();  
		
		Если Не ЗначениеЗаполнено(Выборка.СуммаНачислений) Тогда
			Возврат 0;
		КонецЕсли; 
		
		СуммаКОплате = Выборка.СуммаНачислений; 
		
		Возврат СуммаКОплате;
	Иначе 
		Возврат 0;
	КонецЕсли;
КонецФункции

#КонецОбласти 
